CMAKE_MINIMUM_REQUIRED( VERSION 3.5.0 )
PROJECT( DendyEngine )

#set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_BUILD_TYPE "Debug")

set(VERSION_MAJOR 1)
set(VERSION_MINOR 0)
set(VERSION_PATCH 0)

# we want to use C++11
if(NOT DEFINED MSVC)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
endif()

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")

# Build with .lib and .dll for libraries on windows
set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS true)
set(BUILD_SHARED_LIBS true) 

set(CMAKE_SUPPRESS_REGENERATION true) # Remove ZERO_CHECK in msvc

include_directories(code)

#============== Link Dependancies ==============#
find_package(OpenGL REQUIRED)
if (OPENGL_FOUND)
    include_directories(${OPENGL_INCLUDE_DIRS})
    link_libraries(${OPENGL_LIBRARIES})
endif()

#find_package(GLEW REQUIRED)
#if(GLEW_FOUND)
    include_directories(${GLEW_INCLUDE_DIR})
    link_libraries(${GLEW_LIBRARY})
#endif()

#find_package(GLM REQUIRED)
#if(GLM_FOUND)
    include_directories(${GLM_INCLUDE_DIRS})
#endif()




set( SDL2_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/include/SDL2" )
set( SDL2_LIBRARY "${CMAKE_SOURCE_DIR}/lib/SDL2/SDL2.lib" )
find_package(SDL2 REQUIRED)
if(SDL2_FOUND)
    include_directories(${SDL2_INCLUDE_DIR})
    link_libraries(${SDL2_LIBRARY})
endif()

#find_package(Vulkan REQUIRED)
#if(Vulkan_FOUND)
    include_directories(${VULKAN_INCLUDE_DIR})
    link_libraries(${VULKAN_LIBRARY})
#endif()


#find_package(X11_XCB)
#if(X11_XCB_FOUND)
  add_definitions(-DHAVE_X11_XCB)
  list(APPEND SUBSYSTEMS [X11])
  include_directories(${X11_XCB_INCLUDE_DIRS})
#endif()

#find_package(SDL2_image REQUIRED)
#if(SDL2_IMAGE_FOUND)
    include_directories(${SDL2_IMAGE_INCLUDE_DIRS})
    link_libraries(${SDL2_IMAGE_LIBRARIES})
#endif()
#============== Link Dependancies ==============#



#============== Dendy Foundation ==============#
set(DENDY_FOUNDATION_LIBRARY_NAME DendyFoundation)
set(DENDY_FOUNDATION_LIBRARY_VERSION_MAJOR 1)
set(DENDY_FOUNDATION_LIBRARY_VERSION_MINOR 0)
set(DENDY_FOUNDATION_LIBRARY_VERSION_PATCH 0)
set(DENDY_FOUNDATION_LIBRARY_VERSION_NAME V${DENDY_FOUNDATION_LIBRARY_VERSION_MAJOR}.${DENDY_FOUNDATION_LIBRARY_VERSION_MINOR}.${DENDY_FOUNDATION_LIBRARY_VERSION_PATCH})

file(GLOB_RECURSE DENDY_FOUNDATION_LIBRARY_HEADER_FILES code/DendyFoundation/*.h)
file(GLOB_RECURSE DENDY_FOUNDATION_LIBRARY_SOURCE_FILES code/DendyFoundation/*.cpp)


# Create shared library
add_library(
   ${DENDY_FOUNDATION_LIBRARY_NAME}
      SHARED ${DENDY_FOUNDATION_LIBRARY_SOURCE_FILES}
             ${DENDY_FOUNDATION_LIBRARY_HEADER_FILES}
)

#include_directories(${DENDY_FOUNDATION_LIBRARY_HEADER_FILES})

# Install library
set( DENDY_FOUNDATION_LIBRARY_LIB "${CMAKE_SOURCE_DIR}/lib/${DENDY_FOUNDATION_LIBRARY_NAME}/${DENDY_FOUNDATION_LIBRARY_VERSION_NAME}" )
set_target_properties(
   ${DENDY_FOUNDATION_LIBRARY_NAME}
      PROPERTIES PREFIX ""
      LIBRARY_OUTPUT_DIRECTORY ${DENDY_FOUNDATION_LIBRARY_LIB}
)

# Install library headers
set( DENDY_FOUNDATION_LIBRARY_INCLUDE "${CMAKE_SOURCE_DIR}/include/${DENDY_FOUNDATION_LIBRARY_NAME}/${DENDY_FOUNDATION_LIBRARY_VERSION_NAME}" )
install(
   FILES ${DENDY_FOUNDATION_LIBRARY_HEADER_FILES}
      DESTINATION ${DENDY_FOUNDATION_LIBRARY_INCLUDE}
)
#============== Dendy Foundation ==============#





# ============== Volk Phetamine ==============#
set(VOLK_PHETAMINE_LIBRARY_NAME VolkPhetamine)
set(VOLK_PHETAMINE_LIBRARY_VERSION_MAJOR 1)
set(VOLK_PHETAMINE_LIBRARY_VERSION_MINOR 0)
set(VOLK_PHETAMINE_LIBRARY_VERSION_PATCH 0)
set(VOLK_PHETAMINE_LIBRARY_VERSION_NAME V${VOLK_PHETAMINE_LIBRARY_VERSION_MAJOR}.${VOLK_PHETAMINE_LIBRARY_VERSION_MINOR}.${VOLK_PHETAMINE_LIBRARY_VERSION_PATCH})

file(GLOB_RECURSE VOLK_PHETAMINE_LIBRARY_HEADER_FILES code/VolkPhetamine/*.h)
file(GLOB_RECURSE VOLK_PHETAMINE_LIBRARY_SOURCE_FILES code/VolkPhetamine/*.cpp)


# Create shared library
add_library(
   ${VOLK_PHETAMINE_LIBRARY_NAME}
      SHARED ${VOLK_PHETAMINE_LIBRARY_SOURCE_FILES}
             ${VOLK_PHETAMINE_LIBRARY_HEADER_FILES}
)

# (${VOLK_PHETAMINE_LIBRARY_HEADER_FILES})
target_link_libraries(${VOLK_PHETAMINE_LIBRARY_NAME} ${DENDY_FOUNDATION_LIBRARY_NAME} ${SDL2_LIBRARY})



# Install library
set( VOLK_PHETAMINE_LIBRARY_LIB "${CMAKE_SOURCE_DIR}/lib/${VOLK_PHETAMINE_LIBRARY_NAME}/${VOLK_PHETAMINE_LIBRARY_VERSION_NAME}" )
set_target_properties(
   ${VOLK_PHETAMINE_LIBRARY_NAME}
      PROPERTIES PREFIX ""
      LIBRARY_OUTPUT_DIRECTORY ${VOLK_PHETAMINE_LIBRARY_LIB}
)

# Install library headers
set( VOLK_PHETAMINE_LIBRARY_INCLUDE "${CMAKE_SOURCE_DIR}/include/${VOLK_PHETAMINE_LIBRARY_NAME}/${VOLK_PHETAMINE_LIBRARY_VERSION_NAME}" )
install(
   FILES ${VOLK_PHETAMINE_LIBRARY_HEADER_FILES}
      DESTINATION ${VOLK_PHETAMINE_LIBRARY_INCLUDE}
)
# ============== Volk Phetamine ==============#




#file(GLOB_RECURSE VOLK_PHETAMINE_LIBRARY_HEADER_FILES code/VolkPhetamine/*.h)
#file(GLOB_RECURSE DENDY_FOUNDATION_LIBRARY_SOURCE_FILES code/VolkPhetamine/*.cpp)





#file(GLOB_RECURSE INCLUDE_HEADER_FILES include/*.h)

add_executable( ${PROJECT_NAME} ${INCLUDE_HEADER_FILES} code/main.cpp )

include_directories(${DENDY_FOUNDATION_LIBRARY_INCLUDE})
include_directories(${VOLK_PHETAMINE_LIBRARY_INCLUDE})
# link_libraries(${DENDY_FOUNDATION_LIBRARY_LIB})

target_link_libraries(${PROJECT_NAME} ${DENDY_FOUNDATION_LIBRARY_NAME} ${VOLK_PHETAMINE_LIBRARY_NAME})

target_compile_definitions(
   ${DENDY_FOUNDATION_LIBRARY_NAME}
      PRIVATE
         DENDYENGINE_MODE_DEBUG=1
         DENDYENGINE_PLATFORM_WINDOWS=1
         # DENDYENGINE_PLATFORM_LINUX=1
         DENDYENGINE_VERSION_MAJOR=1
         DENDYENGINE_VERSION_MINOR=0
         DENDYENGINE_VERSION_PATCH=0
)

target_compile_definitions(
   ${PROJECT_NAME}
      PRIVATE
         DENDYENGINE_MODE_DEBUG=1
         DENDYENGINE_PLATFORM_WINDOWS=1
         #DENDYENGINE_PLATFORM_LINUX=1
         DENDYENGINE_VERSION_MAJOR=1
         DENDYENGINE_VERSION_MINOR=0
         DENDYENGINE_VERSION_PATCH=0
)

target_compile_definitions(
   ${VOLK_PHETAMINE_LIBRARY_NAME}
      PRIVATE
         DENDYENGINE_MODE_DEBUG=1
         DENDYENGINE_PLATFORM_WINDOWS=1
         # DENDYENGINE_PLATFORM_LINUX=1
         DENDYENGINE_VERSION_MAJOR=1
         DENDYENGINE_VERSION_MINOR=0
         DENDYENGINE_VERSION_PATCH=0
)
