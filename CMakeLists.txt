CMAKE_MINIMUM_REQUIRED( VERSION 3.5.0 )
#============== Project conf and CMAKE General options ==============#
PROJECT( DendyEngine CXX )

#set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_BUILD_TYPE "Debug")

set(VERSION_MAJOR 1)
set(VERSION_MINOR 0)
set(VERSION_PATCH 0)

# we want to use C++11
if(NOT DEFINED MSVC)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
endif()

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")



set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_SOURCE_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_SOURCE_DIR}/bin)

# Build with .lib and .dll for libraries on windows
set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS true)
set(BUILD_SHARED_LIBS true)

set(CMAKE_SUPPRESS_REGENERATION true) # Remove ZERO_CHECK in msvc
#============== Project conf and CMAKE General options ==============#




#============== Lib names, files and versions sets ==============#
set(LIBRARY_LINK_PATH ${CMAKE_SOURCE_DIR}/lib)

set(DENDY_FOUNDATION_LIBRARY DendyFoundation)
set(PIXPHETAMINE_LIBRARY PixPhetamine)


file(GLOB_RECURSE DENDY_FOUNDATION_HEADER_FILES ${CMAKE_SOURCE_DIR}/code/DendyFoundation/*.h ${CMAKE_SOURCE_DIR}/code/DendyFoundation/*.inl)
file(GLOB_RECURSE DENDY_FOUNDATION_SOURCE_FILES ${CMAKE_SOURCE_DIR}/code/DendyFoundation/*.cpp)

file(GLOB_RECURSE PIXPHETAMINE_HEADER_FILES ${CMAKE_SOURCE_DIR}/code/PixPhetamine/*.h ${CMAKE_SOURCE_DIR}/code/PixPhetamine/*.inl )
file(GLOB_RECURSE PIXPHETAMINE_SOURCE_FILES ${CMAKE_SOURCE_DIR}/code/PixPhetamine/*.cpp)


set(DENDY_FOUNDATION_VERSION_MAJOR 1)
set(DENDY_FOUNDATION_VERSION_MINOR 0)
set(DENDY_FOUNDATION_VERSION_PATCH 0)

set(PIXPHETAMINE_VERSION_MAJOR 1)
set(PIXPHETAMINE_VERSION_MINOR 0)
set(PIXPHETAMINE_VERSION_PATCH 0)


set(DENDY_FOUNDATION_VERSION_NAME 'V${DENDY_FOUNDATION_VERSION_MAJOR}.${DENDY_FOUNDATION_VERSION_MINOR}.${DENDY_FOUNDATION_VERSION_PATCH}')
set(PIXPHETAMINE_VERSION_NAME 'V${PIXPHETAMINE_VERSION_MAJOR}.${PIXPHETAMINE_VERSION_MINOR}.${PIXPHETAMINE_VERSION_PATCH}')
#============== Lib names, files and versions sets ==============#




include_directories("${CMAKE_SOURCE_DIR}/code")
include_directories("${CMAKE_SOURCE_DIR}/include")



#============== Link Dependancies ==============#
set( GLFW_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/include/GLFW" )
set( GLFW_LIBRARY "${CMAKE_SOURCE_DIR}/lib/GLFW/glfw3.lib" )
#find_package(GLEW REQUIRED)
#if(GLEW_FOUND)
    include_directories(${GLFW_INCLUDE_DIR})
    link_libraries(${GLFW_LIBRARY})
#endif()

#find_package(GLM REQUIRED)
#if(GLM_FOUND)
#    include_directories(${GLM_INCLUDE_DIRS})
#endif()

#set( SDL2_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/include/SDL2" )
#set( SDL2_LIBRARY "${CMAKE_SOURCE_DIR}/lib/SDL2/SDL2.lib" )
#find_package(SDL2 REQUIRED)
#if(SDL2_FOUND)
#    include_directories(${SDL2_INCLUDE_DIR})
#    link_libraries(${SDL2_LIBRARY})
#endif()

find_package(VULKAN REQUIRED)
if(VULKAN_FOUND)
    include_directories(${VULKAN_INCLUDE_DIR})
    link_libraries(${VULKAN_LIBRARY})
endif()


#find_package(X11_XCB)
#if(X11_XCB_FOUND)
  add_definitions(-DHAVE_X11_XCB)
  list(APPEND SUBSYSTEMS [X11])
  include_directories(${X11_XCB_INCLUDE_DIRS})
#endif()

#find_package(SDL2_image REQUIRED)
#if(SDL2_IMAGE_FOUND)
    #include_directories(${SDL2_IMAGE_INCLUDE_DIRS})
    #link_libraries(${SDL2_IMAGE_LIBRARIES})
#endif()
#============== Link Dependancies ==============#



#============== Dendy Foundation ==============#
add_library(
	${DENDY_FOUNDATION_LIBRARY}
	${DENDY_FOUNDATION_SOURCE_FILES}
	${DENDY_FOUNDATION_HEADER_FILES}
)

set_target_properties(
	${DENDY_FOUNDATION_LIBRARY}
	PROPERTIES PREFIX "" LINKER_LANGUAGE CXX
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${LIBRARY_LINK_PATH}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${LIBRARY_LINK_PATH}
)
#============== Dendy Foundation ==============#


# ============== Pix Phetamine ==============#
add_library(
	${PIXPHETAMINE_LIBRARY}
	${PIXPHETAMINE_SOURCE_FILES}
	${PIXPHETAMINE_HEADER_FILES}
)

# Link with Dendy foundation
target_link_libraries(
	${PIXPHETAMINE_LIBRARY}
	${DENDY_FOUNDATION_LIBRARY}
)

set_target_properties(
	${PIXPHETAMINE_LIBRARY}
	PROPERTIES PREFIX "" LINKER_LANGUAGE CXX
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${LIBRARY_LINK_PATH}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${LIBRARY_LINK_PATH}
)

target_compile_definitions(
	${PIXPHETAMINE_LIBRARY}
	PRIVATE
	DENDYENGINE_MODE_DEBUG=1
	DENDYENGINE_PLATFORM_WINDOWS=1
	# DENDYENGINE_PLATFORM_LINUX=1
	DENDYENGINE_VERSION_MAJOR=${VERSION_MAJOR}
	DENDYENGINE_VERSION_MINOR=${VERSION_MINOR}
	DENDYENGINE_VERSION_PATCH=${VERSION_PATCH}
	PIXPHETAMINE_VERSION_MAJOR=${PIXPHETAMINE_VERSION_MAJOR}
	PIXPHETAMINE_VERSION_MINOR=${PIXPHETAMINE_VERSION_MINOR}
	PIXPHETAMINE_VERSION_PATCH=${PIXPHETAMINE_VERSION_PATCH}
)
# ============== Pix Phetamine ==============#



# ============== DENDY ENGINE ==============#
add_executable( 
	${PROJECT_NAME}
	${INCLUDE_HEADER_FILES}
	${CMAKE_SOURCE_DIR}/code/main.cpp
)

target_link_libraries(
	${PROJECT_NAME}
	${DENDY_FOUNDATION_LIBRARY}
	${PIXPHETAMINE_LIBRARY}
)
#${SDL2_LIBRARY} ${GLFW_LIBRARY} ${VULKAN_LIBRARY}
# ============== DENDY ENGINE ==============#





# ============== Preprocessor variables  ==============#
target_compile_definitions(
	${DENDY_FOUNDATION_LIBRARY}
	PRIVATE
	DENDYENGINE_MODE_DEBUG=1
	DENDYENGINE_PLATFORM_WINDOWS=1
	# DENDYENGINE_PLATFORM_LINUX=1
	DENDYENGINE_VERSION_MAJOR=1
	DENDYENGINE_VERSION_MINOR=0
	DENDYENGINE_VERSION_PATCH=0
)

target_compile_definitions(
	${PROJECT_NAME}
	PRIVATE
	DENDYENGINE_MODE_DEBUG=1
	DENDYENGINE_PLATFORM_WINDOWS=1
	#DENDYENGINE_PLATFORM_LINUX=1
	DENDYENGINE_VERSION_MAJOR=1
	DENDYENGINE_VERSION_MINOR=0
	DENDYENGINE_VERSION_PATCH=0
)


