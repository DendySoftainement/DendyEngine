////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// -----------------------------------------------------------------------------------------------------------------------------------------------------------
////   \file    WindowHandleInterface.h
////   \author  Daniel Huc aka Dendy
////   \date    December 2017
////   -----------------------------
////   \brief   Interface for window creation, setup, and image display
////   ---------------------------------------------------------------------------------------------------------------------------------------------------------
////   \details None
//// -----------------------------------------------------------------------------------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// FIXME: -
////        -
//// -----------------------------------------------------------------------------------------------------------------------------------------------------------
//// TODO:  -
////        -
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once

//// - Standard includes section - ////

//// - External includes section - ////
#include <vulkan/vulkan.h>

//// -Foundation includes section- ////
#include "DendyFoundation/Types.h"

//// - Internal includes section - ////

//// - Defines and macro section - ////

//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Specific to 'WINDOWS/LINUX' <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#ifdef DENDYENGINE_PLATFORM_WINDOWS
#define VK_USE_PLATFORM_WIN32_KHR
#endif
#ifdef DENDYENGINE_PLATFORM_LINUX
#define VK_USE_PLATFORM_XCB_KHR
#endif
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//// ---- Namespaces ---- ////
namespace DendyEngine {

   namespace VolkPhetamine {

      namespace WindowHandle {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////   Class CMyClass                                                                                                                                       ////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

   // \brief     Unique class to initialize window platform dependent system for display
   // \details   None
   template <class TWindowHandle>
   class IWindowHandle {

   ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   //// ---- Enum/Struct/Constants -----                                                                                                   ////
   ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   public:
      struct SVulkanReadyWindow {
         VkSurfaceKHR*   vulkanSurface;
         TWindowHandle*  window;
      };


   ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   //// ---- Members -----                                                                                                                 ////
   ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   private:


   ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   //// ---- Methods -----                                                                                                                 ////
   ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   public:
   //// ----  Object  ---- ////
      IWindowHandle() { /***/ };
      virtual ~IWindowHandle() = 0;

   //// ----   Core   ---- ////
      virtual SVulkanReadyWindow openWindow() = 0;
      virtual void closeWindow( SVulkanReadyWindow window ) = 0;

   };

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////                                                                                                                                                        ////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

      }
   }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
