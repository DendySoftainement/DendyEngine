////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// -----------------------------------------------------------------------------------------------------------------------------------------------------------
////   \file    DyVec.h
////   \author  Daniel Huc aka Dendy
////   \date    January 2019
////   -----------------------------
////   \brief   None
////   ---------------------------------------------------------------------------------------------------------------------------------------------------------
////   \details None
//// -----------------------------------------------------------------------------------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// FIXME: -
////        -
//// -----------------------------------------------------------------------------------------------------------------------------------------------------------
//// TODO:  - FINISH
////        - TEST
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once

//// - Standard includes section - ////

//// - External includes section - ////

//// -Foundation includes section- ////
#include "DendyFoundation/Types.h"

//// - Internal includes section - ////

//// - Defines and macro section - ////

//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Specific to 'WINDOWS/LINUX' <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#ifdef DENDYENGINE_PLATFORM_WINDOWS

#endif
#ifdef DENDYENGINE_PLATFORM_LINUX

#endif
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//// ---- Namespaces ---- ////
namespace DendyEngine {

   namespace DendyFoundation {

      namespace CustomTypes {

         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         ////   Class CMyClass                                                                                                                                       ////
         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

         template <class T>
         class dyVec {

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //// ---- Enum/Struct/Constants -----                                                                                                   ////
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         public:
            enum class EType {
               SORTED
            };

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //// ---- Members -----                                                                                                                 ////
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         private:
            std::vector<T> m_vector;

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //// ---- Methods -----                                                                                                                 ////
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         private:
            //// ---- Internal ---- ////
            void _doStuff( );

         public:
            //// ----  Object  ---- ////
            template <class T>
            dyVec<T>( );
            template <class T>
            dyVec<T>( dyUInt a_preallocatedElementCount );
            template <class T>
            dyVec<T>( dyUInt a_preallocatedElementCount );

            template <class T>
            ~dyVec<T>( );

         private:
            //// ----  Forbid  ---- ////

            //// ----  Static  ---- ////

            //// ---- Accessor ---- ////

            //// ----   Core   ---- ////


         };

         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         ////                                                                                                                                                        ////
         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

      }
   }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

