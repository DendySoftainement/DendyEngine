////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// -----------------------------------------------------------------------------------------------------------------------------------------------------------
////   \file    DyString.h
////   \author  Daniel Huc aka Dendy
////   \date    January 2019
////   -----------------------------
////   \brief   None
////   ---------------------------------------------------------------------------------------------------------------------------------------------------------
////   \details None
//// -----------------------------------------------------------------------------------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// FIXME: -
////        -
//// -----------------------------------------------------------------------------------------------------------------------------------------------------------
//// TODO:  - FINISH
////        - TEST
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once

//// - Standard includes section - ////
#include <string>

//// - External includes section - ////

//// -Foundation includes section- ////

//// - Internal includes section - ////

//// - Defines and macro section - ////

//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Specific to 'WINDOWS/LINUX' <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#ifdef DENDYENGINE_PLATFORM_WINDOWS

#endif
#ifdef DENDYENGINE_PLATFORM_LINUX

#endif
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//// ---- Namespaces ---- ////
namespace DendyEngine {

   namespace DendyFoundation {

      namespace CustomTypes {

         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         ////   Class CMyClass                                                                                                                                       ////
         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

         class dyString {

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //// ---- Enum/Struct/Constants -----                                                                                                   ////
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         public:


            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //// ---- Members -----                                                                                                                 ////
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         private:
            std::string m_string;
            uint_fast16_t m_maxLen;

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //// ---- Methods -----                                                                                                                 ////
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         private:
            //// ---- Internal ---- ////

         public:
            //// ----  Object  ---- ////
            dyString();
            dyString(dyString const& a_string);
            dyString(uint_fast16_t a_capacity);
            dyString(const char* a_string);
            dyString(std::string a_string);
            dyString& operator+(dyString const& a_string);
            dyString& operator+(const char* a_string);
            dyString& operator+(int_fast32_t a_integer);
            dyString& operator+(float a_float);
            dyString& operator+(bool a_boolean);
            bool const& operator==(dyString const& a_string);
            bool const& operator==(const char* a_string);

         private:
            //// ----  Forbid  ---- ////

         public:
            //// ----  Static  ---- ////
            static dyString& createFormatedString( const char* a_string, ... );

            //// ---- Accessor ---- ////

            //// ----   Core   ---- ////
            const char* asConstChar();
            const char* asNewConstChar();
            char* asNewChar();
            std::string asStdString() { return m_string; }

            bool const& find(dyString const& a_toFind);
            bool const& find(const char* a_toFind);

            void replace(dyString const& a_toFind, dyString const& a_newValue);
            void replace(const char* a_toFind, const char* a_newValue);

            /// \brief Eis phokoowin scheit gonna work as a python substring too [2:-1]
            dyString const& substring(int_fast16_t a_begin, int_fast16_t a_end);

         };

         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         ////                                                                                                                                                        ////
         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

      }
   }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

