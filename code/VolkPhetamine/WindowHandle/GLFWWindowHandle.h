////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// -----------------------------------------------------------------------------------------------------------------------------------------------------------
////   \file    GLFWWindowHandle.h
////   \author  Daniel Huc aka Dendy
////   \date    August 2018
////   -----------------------------
////   \brief   Implementation of WindowHandleInterface based on GLWF
////   ---------------------------------------------------------------------------------------------------------------------------------------------------------
////   \details None
//// -----------------------------------------------------------------------------------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// FIXME: -
////        -
//// -----------------------------------------------------------------------------------------------------------------------------------------------------------
//// TODO:  - FINISH
////        - TEST
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once

//// - Standard includes section - ////

//// - External includes section - ////
#define GLFW_INCLUDE_VULKAN
#include <glfw3.h>
//// -Foundation includes section- ////
#include "DendyFoundation/Types.h"

//// - Internal includes section - ////
#include "VolkPhetamine/WindowHandle/WindowHandleInterface.h"

//// - Defines and macro section - ////

//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Specific to 'WINDOWS/LINUX' <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
#ifdef DENDYENGINE_PLATFORM_WINDOWS

#endif
#ifdef DENDYENGINE_PLATFORM_LINUX

#endif
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//// ---- Namespaces ---- ////
namespace DendyEngine {

   namespace VolkPhetamine {

      namespace WindowHandle {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////   Class CMyClass                                                                                                                                       ////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

         class UGLFWWindowHandle: public IWindowHandle<GLFWwindow> {

         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         //// ---- Enum/Struct/Constants -----                                                                                                   ////
         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         public:

            struct SConfiguration {
               dyUInt16 width             { 800 };
               dyUInt16 height            { 600 };
               dyBool   without_borders   { false };
               dyString caption           { "" };
            };

            static const dyUInt16 MAX_OPENED_WINDOWS = 64;

         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         //// ---- Members -----                                                                                                                 ////
         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         private:
            dyVec<SVulkanReadyWindow> m_openedWindows;
            SConfiguration m_config;
            // Vulkan related folks
            VkInstance m_vulkanInstance;
            VkDevice m_vulkanDevice;

         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         //// ---- Methods -----                                                                                                                 ////
         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         private:
         //// ---- Internal ---- ////
            void _setupDisplay( );
            void _createVkInstance( );
            void _getGlfwExtensionsForVk( const char* const** a_requiredExtensions, dyUInt& a_requiredExtensionsCount );
            void _createVkDevice( );
            void _initGlfw( );
            

         public:
         //// ----  Object  ---- ////
            UGLFWWindowHandle( );
            ~UGLFWWindowHandle( );

         private:
         //// ----  Forbid  ---- ////

         public:
         //// ----  Static  ---- ////

         //// ---- Accessor ---- ////

         //// ----   Core   ---- ////
         ///
         ///
            SVulkanReadyWindow openWindow( SConfiguration const& a_config = SConfiguration( ) );
            void closeWindow( SVulkanReadyWindow window );
            dyBool isCloseTriggered( SVulkanReadyWindow window );
            void gatherInputs( );

         };

         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
         ////                                                                                                                                                        ////
         ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

      }
   }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
